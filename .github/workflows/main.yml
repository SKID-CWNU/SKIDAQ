name: "CodeQL"

on:
  push:
    branches: [ "main" ]
    jobs:
  # This is the name of the job - can be whatever.
  test-matrix:

    # Here we tell GitHub that the jobs must be determined
    # dynamically depending on a matrix configuration.
    strategy:
      matrix:
        # The matrix will produce one job for each configuration
        # parameter of type `arduino-platform`, in this case a
        # total of 2.
        arduino-platform: ["arduino:samd", "arduino:avr"]
        # This is usually optional but we need to statically define the
        # FQBN of the boards we want to test for each platform. In the
        # future the CLI might automatically detect and download the core
        # needed to compile against a certain FQBN, at that point the
        # following `include` section will be useless.
        include:
          # This works like this: when the platform is "arduino:samd", the
          # variable `fqbn` is set to "arduino:samd:nano_33_iot".
          - arduino-platform: "arduino:samd"
            fqbn: "arduino:samd:nano_33_iot"
          - arduino-platform: "arduino:avr"
            fqbn: "arduino:avr:unowifi"

    # This is the platform GitHub will use to run our workflow, we
    # pick Windows for no particular reason.
    runs-on: windows-latest

    # This is the list of steps this job will run.
    steps:
    - name: arduino/arduino-lint-action
  # You may pin to the exact commit or the version.
  # uses: arduino/arduino-lint-action@e9a30879471dcbf7d9fe3481b26e60b652cca297
  uses: arduino/arduino-lint-action@v1.0.2
  with:
    # Path containing Arduino projects.
    path: # optional
    # Version of the Arduino Lint tool to use.
    version: # optional, default is 1.x
    # How strict the checks are.
    compliance: # optional, default is specification
    # Configuration of the checks for libraries in the Arduino Library Manager index.
    library-manager: # optional
    # The type of project to check.
    project-type: # optional, default is all
    # Search path recursively for projects to check.
    recursive: # optional, default is false
    # Save a JSON formatted report on the checks to this file.
    report-file: # optional
    # Show more information on the checks being run.
    verbose: # optional, default is false
    # Run the checks that only apply to official (non 3rd party) Arduino projects.
    official: # optional, default is false
    # GitHub access token used to get information from the GitHub API.
    token: # optional, default is ${{ github.token }}
- name: Setup Arduino CLI
  # You may pin to the exact commit or the version.
  # uses: arduino/setup-arduino-cli@28065f7e0317cc0dde372e0c11631963d743ee3b
  uses: arduino/setup-arduino-cli@v1.1.2
  with:
    # Version to use. Example: 0.5.0
    version: # optional, default is 0.x
    # Personal access token (PAT) used to call the Github API.
    token: # optional, default is ${{ github.token }}
          
